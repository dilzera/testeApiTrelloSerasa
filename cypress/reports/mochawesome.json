{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-13T00:13:27.689Z",
    "end": "2024-01-13T00:13:31.084Z",
    "duration": 3395,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4f317d4f-c048-4579-9f97-3efa45479328",
      "title": "",
      "fullFile": "cypress\\e2e\\testeapitrello.cy.js",
      "file": "cypress\\e2e\\testeapitrello.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
          "title": "API Test - Trello",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Criar board com nome válido",
              "fullTitle": "API Test - Trello Criar board com nome válido",
              "timedOut": null,
              "duration": 470,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `https://api.trello.com/1/boards/?name=BoardValido&key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  boardId = response.body.id; // Salvar o ID do board para uso nos testes subsequentes\n});",
              "err": {},
              "uuid": "ab18eba4-fddd-4ee9-93d0-d24605042bbc",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar board sem nome",
              "fullTitle": "API Test - Trello Criar board sem nome",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `https://api.trello.com/1/boards/?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`,\n  failOnStatusCode: false // Isso permite que a solicitação seja concluída mesmo que o status não seja 2xx\n}).then(response => {\n  expect(response.status).to.eq(400); // Um código de status 400 é esperado quando o nome é omitido\n});",
              "err": {},
              "uuid": "e709326b-55dc-4448-8e30-3242b7ce0f2e",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar card com nome e descrição válidos",
              "fullTitle": "API Test - Trello Criar card com nome e descrição válidos",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Certifique-se de que o boardId foi definido antes de tentar usar\nexpect(boardId).not.to.be.null;\n// Buscar as listas do board para obter o ID da lista (idList)\ncy.request({\n  method: 'GET',\n  url: `https://api.trello.com/1/boards/${boardId}/lists?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length.at.least(1); // Verifica se há pelo menos uma lista no board\n  const listId = response.body[0].id; // Pega o ID da primeira lista\n  cy.request({\n    method: 'POST',\n    url: `https://api.trello.com/1/cards?idList=${listId}&name=CardValido&desc=Descrição válida&key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`\n  }).then(cardResponse => {\n    expect(cardResponse.status).to.eq(200);\n    cardId = cardResponse.body.id; // Verifique se esta linha está correta\n  });\n});",
              "err": {},
              "uuid": "b90919c6-eb60-480b-8711-bf200c7e005c",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar card sem nome",
              "fullTitle": "API Test - Trello Criar card sem nome",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `https://api.trello.com/1/cards?idList=${boardId}&key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`,\n  failOnStatusCode: false // Permite que a solicitação seja concluída mesmo que o status não seja 2xx\n}).then(response => {\n  expect(response.status).to.eq(404); // Espera-se um código de status 400 quando o nome é omitido\n});",
              "err": {},
              "uuid": "17af9ce6-06b4-42b1-8e6f-bafbe0ed10c4",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir card existente",
              "fullTitle": "API Test - Trello Excluir card existente",
              "timedOut": null,
              "duration": 470,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Certifique-se de que o cardId foi definido\nexpect(cardId).not.to.be.null;\n// Faz a requisição para excluir o card\ncy.request({\n  method: 'DELETE',\n  url: `https://api.trello.com/1/cards/${cardId}?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`\n}).then(deleteResponse => {\n  expect(deleteResponse.status).to.eq(200);\n});",
              "err": {},
              "uuid": "44d6e8eb-9352-4cde-9986-3e4fa89d2645",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir card inexistente",
              "fullTitle": "API Test - Trello Excluir card inexistente",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `https://api.trello.com/1/cards/${cardId}?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`,\n  failOnStatusCode: false // Permite que a solicitação seja concluída mesmo que o status não seja 2xx\n}).then(response => {\n  expect(response.status).to.eq(404); // Espera-se um código de status 404 para um card inexistente\n});",
              "err": {},
              "uuid": "394591e9-ceab-430c-bbd3-13f28b9e9d16",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir board existente",
              "fullTitle": "API Test - Trello Excluir board existente",
              "timedOut": null,
              "duration": 1022,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `https://api.trello.com/1/boards/${boardId}?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "9d58cf9a-a1b3-4b4e-acda-324500b6dc90",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir board inexistente",
              "fullTitle": "API Test - Trello Excluir board inexistente",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `https://api.trello.com/1/boards/${boardId}?key=${Cypress.env('TRELLO_API_KEY')}&token=${Cypress.env('TRELLO_TOKEN')}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404); // Espera-se um código de status 404 para um board inexistente\n});",
              "err": {},
              "uuid": "bca00796-e00a-422a-a787-9738a4d1adb8",
              "parentUUID": "93dcf3b3-725d-4734-ae14-3362cb1bdfc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab18eba4-fddd-4ee9-93d0-d24605042bbc",
            "e709326b-55dc-4448-8e30-3242b7ce0f2e",
            "b90919c6-eb60-480b-8711-bf200c7e005c",
            "17af9ce6-06b4-42b1-8e6f-bafbe0ed10c4",
            "44d6e8eb-9352-4cde-9986-3e4fa89d2645",
            "394591e9-ceab-430c-bbd3-13f28b9e9d16",
            "9d58cf9a-a1b3-4b4e-acda-324500b6dc90",
            "bca00796-e00a-422a-a787-9738a4d1adb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}